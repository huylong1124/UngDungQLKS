package Form;

import static Databasee.Databasee.getConnection;
import controller.QLDichVuSuDung;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import Form.frmQLPhong;

/**
 *
 * @author admin
 */
public class frmQLDichVuSuDung extends javax.swing.JFrame {

    /**
     * Creates new form frmQLDichVuSuDung
     */
    public frmQLDichVuSuDung() {
        initComponents();
        // Gán mã phòng mặc định nếu cần
        txtMaPhong.setText("P001"); // Hoặc lấy mã phòng từ đâu đó nếu cần
        txtMaPhong.setEditable(true); // Cho phép người dùng chỉnh sửa mã phòng      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMoTa = new javax.swing.JTextField();
        txtTenDV = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        txtSoLuongTon = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtLoaiDichVu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnQuayLai = new javax.swing.JButton();
        btnHuyBo = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        txtMaDV = new javax.swing.JTextField();
        btnHienBang = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnDatDichVu = new javax.swing.JButton();
        txtMaPhong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnXoaDichVu = new javax.swing.JButton();
        btnLichSu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDatDV = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableQLDichVuSuDung = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("BẢNG QUẢN LÝ DỊCH VỤ SỬ DỤNG");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(328, 328, 328)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jLabel2.setText("Tên Dịch Vụ:");

        jLabel3.setText("Mã Dịch Vụ:");

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jLabel4.setText("Mô Tả:");

        jLabel5.setText("Loại Dịch Vụ:");

        jLabel6.setText("Đơn Giá:");

        jLabel7.setText("Số Lượng Tồn:");

        btnQuayLai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnHuyBo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHuyBo.setText("Hủy Bỏ");
        btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyBoActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnHienBang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHienBang.setText("Hiện Bảng");
        btnHienBang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienBangActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem.setText("Tìm kiếm dịch vụ");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel11.setText("Tìm kiếm:");

        btnDatDichVu.setText("Đặt dịch vụ");
        btnDatDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatDichVuActionPerformed(evt);
            }
        });

        jLabel8.setText("Mã Phòng:");

        btnXoaDichVu.setText("Xóa dịch vụ");
        btnXoaDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDichVuActionPerformed(evt);
            }
        });

        btnLichSu.setText("Lịch sử đặt dịch vụ");
        btnLichSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLichSuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoaiDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 267, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(194, 194, 194)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(25, 25, 25)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtMaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(103, 103, 103)
                                        .addComponent(txtMoTa)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                .addComponent(txtMaPhong))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnTimKiem)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnXoaDichVu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                        .addComponent(btnDatDichVu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                    .addComponent(btnLichSu))))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnHienBang, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLoaiDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHienBang, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDatDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLichSu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 36, Short.MAX_VALUE)
                .addComponent(btnXoaDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        tableDatDV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaDV", "MaPhong", "SoLuong", "SoTien"
            }
        ));
        jScrollPane2.setViewportView(tableDatDV);

        tableQLDichVuSuDung.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableQLDichVuSuDung.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MaDV", "TenDV", "LoaiDichVu", "DonGia", "SoLuongTon", "MoTa"
            }
        ));
        jScrollPane1.setViewportView(tableQLDichVuSuDung);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(0, 1113, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(22, 22, 22))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // Lấy dữ liệu từ form
        String maDV = txtMaDV.getText();
        String tenDV = txtTenDV.getText();
        String loaiSuDung = txtLoaiDichVu.getText();
        double donGia = Double.parseDouble(txtDonGia.getText());
        String soLuongTon = txtLoaiDichVu.getText();
        String moTa = txtMoTa.getText();

        // Tạo đối tượng QLDichVuSuDung
        QLDichVuSuDung dv = new QLDichVuSuDung(maDV, tenDV, loaiSuDung, donGia, soLuongTon, moTa);

        //thêm bản ghi vào cơ sở dữ liệu
        try {
            Connection conn = getConnection();

            // Thêm nhân viên vào cơ sở dữ liệu
            if (dv.themDichVu()) {
                JOptionPane.showMessageDialog(null, "Thêm dịch vụ thành công!");
                loadDataIntoTable();
            } else {
                JOptionPane.showMessageDialog(null, "Thêm dịch vụ thất bại!");
            }
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi khi thêm nhân viên.");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    public void loadDataIntoTable() {
        Connection conn = getConnection();
        DefaultTableModel model = (DefaultTableModel) tableQLDichVuSuDung.getModel();  // tableQLDichVuSuDung là tên JTable
        model.setRowCount(0);  // Xóa dữ liệu cũ trong bảng (nếu có)

        try {
            String sql = "SELECT MaDV, TenDV, LoaiDichVu, DonGia, SoLuongTon, MoTa FROM dbo.DichVu";
            var ps = conn.prepareStatement(sql);
            var rs = ps.executeQuery();

            // Đổ dữ liệu vào JTable
            while (rs.next()) {
                String maDV = rs.getString("MaDV");
                String tenDV = rs.getString("TenDV");
                String loaiDichVu = rs.getString("LoaiDichVu");
                String donGia = rs.getString("DonGia");
                String soLuongTon = rs.getString("SoLuongTon");
                String moTa = rs.getString("MoTa");

                // Thêm dữ liệu vào model của JTable
                model.addRow(new Object[]{maDV, tenDV, loaiDichVu, donGia, soLuongTon, moTa});
            }

            rs.close();
            ps.close();
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // Lấy dòng đã chọn trong JTable
        int selectedRow = tableQLDichVuSuDung.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dịch vụ cần xóa!");
        } else {
            // Lấy giá trị MaDV từ dòng đã chọn (cột MaDV ở vị trí 0)
            String maDV = tableQLDichVuSuDung.getValueAt(selectedRow, 0).toString();

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa dịch vụ có mã: " + maDV + "?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Thực hiện xóa nhân viên trong cơ sở dữ liệu
                Connection conn = getConnection();
                try {
                    String sql = "DELETE FROM dbo.DichVu WHERE MaDV = ?";
                    PreparedStatement ps = conn.prepareStatement(sql);
                    ps.setString(1, maDV);  // Gán giá trị MaNV vào câu lệnh SQL

                    int rowsDeleted = ps.executeUpdate();  // Thực thi lệnh xóa
                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(null, "Xóa dịch vụ thành công!");
                        loadDataIntoTable();  // Cập nhật lại JTable sau khi xóa
                    } else {
                        JOptionPane.showMessageDialog(null, "Xóa dịch vụ thất bại!");
                    }

                    ps.close();
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Có lỗi xảy ra khi xóa dữ liệu!");
                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // Lấy dữ liệu đã chỉnh sửa từ các JTextField
        String maDV = txtMaDV.getText();
        String tenDV = txtTenDV.getText();
        String loaiDichVu = txtLoaiDichVu.getText();
        String donGia = txtDonGia.getText();
        String soLuongTon = txtSoLuongTon.getText();
        String moTa = txtMoTa.getText();

        // Kiểm tra xem dữ liệu đã nhập đầy đủ chưa
        if (maDV.isEmpty() || tenDV.isEmpty() || loaiDichVu.isEmpty() || donGia.isEmpty() || soLuongTon.isEmpty() || moTa.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin trước khi lưu!");
            return;
        }

        // Cập nhật dữ liệu vào cơ sở dữ liệu
        Connection conn = getConnection();
        try {
            String sql = "UPDATE dbo.DichVu SET TenDV = ?, LoaiDichVu = ?, DonGia = ?, SoLuongTon = ?, MoTa = ? WHERE MaDV = ?";
            PreparedStatement ps = conn.prepareStatement(sql);

            // Gán giá trị cho các tham số trong câu lệnh SQL
            ps.setString(1, tenDV);         // Cập nhật tên dịch vụ
            ps.setString(2, loaiDichVu);   // Cập nhật loại dịch vụ
            ps.setString(3, donGia);       // Cập nhật đơn giá
            ps.setString(4, soLuongTon);   // Cập nhật số lượng tồn
            ps.setString(5, moTa);         // Cập nhật mô tả
            ps.setString(6, maDV);         // Điều kiện WHERE dựa trên MaDV

            // Thực thi lệnh cập nhật
            int rowsUpdated = ps.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(null, "Lưu thay đổi thành công!");
                loadDataIntoTable(); // Làm mới bảng sau khi lưu
            } else {
                JOptionPane.showMessageDialog(null, "Lưu thất bại! Không tìm thấy mã dịch vụ: " + maDV);
            }

            ps.close();
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra khi lưu dữ liệu: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // Tạo instance của form frmTrangChu và hiển thị nó
        frmTrangChu trangChu = new frmTrangChu();
        trangChu.setVisible(true);

        // Ẩn form hiện tại
        this.dispose();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // Lấy dòng đã chọn trong JTable
        int selectedRow = tableQLDichVuSuDung.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dịch vụ cần sửa!");
        } else {
            // Lấy giá trị của từng cột từ hàng được chọn trong JTable
            String maDV = tableQLDichVuSuDung.getValueAt(selectedRow, 0).toString();
            String tenDV = tableQLDichVuSuDung.getValueAt(selectedRow, 1).toString();
            String loaiDichVu = tableQLDichVuSuDung.getValueAt(selectedRow, 2).toString();
            String donGia = tableQLDichVuSuDung.getValueAt(selectedRow, 3).toString();
            String soLuongTon = tableQLDichVuSuDung.getValueAt(selectedRow, 4).toString();
            String moTa = tableQLDichVuSuDung.getValueAt(selectedRow, 5).toString();

            // Hiển thị dữ liệu lên các JTextField để người dùng có thể chỉnh sửa
            txtMaDV.setText(maDV);
            txtTenDV.setText(tenDV);
            txtLoaiDichVu.setText(loaiDichVu);
            txtDonGia.setText(donGia);
            txtSoLuongTon.setText(soLuongTon);
            txtMoTa.setText(moTa);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyBoActionPerformed

        txtMoTa.setText("");
        txtDonGia.setText("");
        txtMaDV.setText("");
        txtLoaiDichVu.setText("");
        txtSoLuongTon.setText("");
        txtTenDV.setText("");
    }//GEN-LAST:event_btnHuyBoActionPerformed

    private void btnHienBangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienBangActionPerformed
        // Gọi phương thức loadDataIntoTable để hiển thị dữ liệu lên JTable
        loadDataIntoTable();
    }//GEN-LAST:event_btnHienBangActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed

        String maDV = txtTimKiem.getText().trim();

        if (maDV.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tên nhân viên cần tìm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            // Sử dụng constructor trống để tránh kiểm tra các giá trị không cần thiết
            QLDichVuSuDung qldv = new QLDichVuSuDung();
            DefaultTableModel model = qldv.timKiemDichVu(maDV);
            tableQLDichVuSuDung.setModel(model); // Cập nhật JTable với kết quả tìm kiếm
        }

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnDatDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatDichVuActionPerformed
        // Lấy dòng được chọn trong tableQLDichVuSuDung
        int selectedRow = tableQLDichVuSuDung.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dịch vụ để đặt!");
            return;
        }

        // Lấy thông tin từ dòng được chọn
        String maDV = tableQLDichVuSuDung.getValueAt(selectedRow, 0).toString();
        String tenDV = tableQLDichVuSuDung.getValueAt(selectedRow, 1).toString();
        double donGia = Double.parseDouble(tableQLDichVuSuDung.getValueAt(selectedRow, 3).toString());

        // Yêu cầu nhập số lượng dịch vụ
        String soLuongStr = JOptionPane.showInputDialog(this, "Nhập số lượng dịch vụ:");
        if (soLuongStr == null || soLuongStr.trim().isEmpty()) {
            return; // Người dùng hủy nhập
        }

        int soLuong;
        try {
            soLuong = Integer.parseInt(soLuongStr);
            if (soLuong <= 0) {
                throw new NumberFormatException(); // Số lượng phải lớn hơn 0
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên dương!");
            return;
        }

        // Tính tổng tiền
        double soTien = donGia * soLuong;

        // Thêm dữ liệu vào tableDatDV
        DefaultTableModel modelDatDV = (DefaultTableModel) tableDatDV.getModel();
        modelDatDV.addRow(new Object[]{maDV, txtMaPhong.getText(), soLuong, soTien});
    }//GEN-LAST:event_btnDatDichVuActionPerformed

    private void btnXoaDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDichVuActionPerformed
        // Lấy chỉ mục của dòng được chọn trong bảng
        int selectedRow = tableDatDV.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một dịch vụ để xóa!");
            return;
        }

        // Lấy dữ liệu từ bảng (MaDV, MaPhong) của dịch vụ đã chọn
        String maDV = tableDatDV.getValueAt(selectedRow, 0).toString();  // MaDV
        String maPhong = tableDatDV.getValueAt(selectedRow, 1).toString(); // MaPhong

        // Xóa dịch vụ khỏi bảng tableDatDV
        DefaultTableModel model = (DefaultTableModel) tableDatDV.getModel();
        model.removeRow(selectedRow);

        // Gọi hàm xóa dịch vụ từ cơ sở dữ liệu
        deleteDichVu(maDV, maPhong);

        // Hiển thị thông báo
        JOptionPane.showMessageDialog(null, "Dịch vụ đã được xóa.");
    }

// Phương thức xóa dịch vụ từ cơ sở dữ liệu
    private void deleteDichVu(String maDV, String maPhong) {
        try {
            // Tạo câu lệnh SQL để xóa dịch vụ từ cơ sở dữ liệu
            String sql = "DELETE FROM dbo.DichVuSuDung WHERE MaDV = ? AND MaPhong = ?";
            Connection conn = getConnection();
            // Thiết lập PreparedStatement
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, maDV);
            ps.setString(2, maPhong);

            // Thực thi câu lệnh SQL
            int rowsAffected = ps.executeUpdate();

            // Kiểm tra xem có xóa thành công không
            if (rowsAffected > 0) {
                System.out.println("Dịch vụ đã được xóa khỏi cơ sở dữ liệu.");
            } else {
                System.out.println("Không tìm thấy dịch vụ để xóa.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi xóa dịch vụ: " + e.getMessage());
        }
    }//GEN-LAST:event_btnXoaDichVuActionPerformed

    private void btnLichSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLichSuActionPerformed
        loadDichVuDaDat(); // Hiển thị danh sách dịch vụ đã đặt 
    }//GEN-LAST:event_btnLichSuActionPerformed
    private void loadDichVuDaDat() {
        Connection conn = getConnection();
        try {
            String sql = "SELECT MaDV, MaPhong, SoLuong, SoTien FROM DichVuSuDung WHERE MaPhong = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, txtMaPhong.getText()); // Lấy mã phòng từ txtMaPhong

            var rs = ps.executeQuery();
            DefaultTableModel modelDatDV = (DefaultTableModel) tableDatDV.getModel();
            modelDatDV.setRowCount(0); // Xóa dữ liệu cũ

            while (rs.next()) {
                modelDatDV.addRow(new Object[]{
                    rs.getString("MaDV"),
                    rs.getString("MaPhong"),
                    rs.getInt("SoLuong"),
                    rs.getDouble("SoTien")
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tải danh sách dịch vụ đã đặt!");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQLDichVuSuDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQLDichVuSuDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQLDichVuSuDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQLDichVuSuDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmQLDichVuSuDung().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDatDichVu;
    private javax.swing.JButton btnHienBang;
    private javax.swing.JButton btnHuyBo;
    private javax.swing.JButton btnLichSu;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaDichVu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableDatDV;
    private javax.swing.JTable tableQLDichVuSuDung;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtLoaiDichVu;
    private javax.swing.JTextField txtMaDV;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtMoTa;
    private javax.swing.JTextField txtSoLuongTon;
    private javax.swing.JTextField txtTenDV;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
