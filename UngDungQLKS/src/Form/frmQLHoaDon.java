package Form;

import Databasee.Databasee;
import static Databasee.Databasee.getConnection;
import Model.DialogHoaDon;
import controller.QuanLyHoaDon;
import Model.RandomDateGenerator;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 *
 * @author admin
 */
public class frmQLHoaDon extends javax.swing.JFrame {
    private frmBieuDoThongKe formThongKe;
    /**
     * Creates new form frmQLNhanVien
     */
    public frmQLHoaDon() {
        initComponents();
        this.formThongKe = formThongKe;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNgayLap = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnQuayLai = new javax.swing.JButton();
        btnHuyBo = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        txtMaHD = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        btnHienBang = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnInHoaDon = new javax.swing.JButton();
        btnXacNhanHoaDon = new javax.swing.JButton();
        btnThanhToanHoaDon = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNgayThanhToan = new javax.swing.JTextField();
        txtTrangThai = new javax.swing.JTextField();
        btnHuyBoThanhToan = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableQLHoaDon = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("BẢNG QUẢN LÝ HÓA ĐƠN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(328, 328, 328)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jLabel2.setText("Mã Khách Hàng:");

        jLabel3.setText("Mã Hóa Đơn:");

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jLabel5.setText("Mã Nhân Viên");

        jLabel6.setText("Ngày Lập:");

        jLabel8.setText("Tổng Tiền: ");

        btnQuayLai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnHuyBo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHuyBo.setText("Hủy Bỏ");
        btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyBoActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnHienBang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHienBang.setText("Hiện Bảng");
        btnHienBang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienBangActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem.setText("Tìm kiếm hóa đơn");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel11.setText("Tìm kiếm:");

        btnInHoaDon.setText("In Hóa Đơn");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        btnXacNhanHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXacNhanHoaDon.setText("Xác nhận hóa đơn");
        btnXacNhanHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanHoaDonActionPerformed(evt);
            }
        });

        btnThanhToanHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThanhToanHoaDon.setText("Thanh toán hóa đơn");
        btnThanhToanHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanHoaDonActionPerformed(evt);
            }
        });

        jLabel9.setText("Ngày Thanh Toán:");

        jLabel10.setText("Trạng Thái:");

        txtTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrangThaiActionPerformed(evt);
            }
        });

        btnHuyBoThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHuyBoThanhToan.setText("Hủy bỏ thanh toán ");
        btnHuyBoThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyBoThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgayThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnHienBang, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnHuyBoThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnThanhToanHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                    .addComponent(btnXacNhanHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 52, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHienBang, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(btnXacNhanHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThanhToanHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnHuyBoThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        tableQLHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableQLHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MaHD", "MaKH", "MaNV", "NgayLap", "TongTien", "TrangThai", "NgayThanhToan"
            }
        ));
        jScrollPane1.setViewportView(tableQLHoaDon);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // Lấy dữ liệu từ form        
        String maHD = txtMaHD.getText();
        String maKH = txtMaKH.getText();
        String maNV = txtMaNV.getText();
        String ngayLap = txtNgayLap.getText();
        double tongTien = Double.parseDouble(txtTongTien.getText());
        // Tạo đối tượng QuanLyHoaDon
        QuanLyHoaDon nv = new QuanLyHoaDon(maHD, maKH, maNV, ngayLap, tongTien);

        //thêm bản ghi vào cơ sở dữ liệu
        try {
            Connection conn = getConnection();

            // Thêm nhân viên vào cơ sở dữ liệu
            if (nv.themHoaDon()) {
                JOptionPane.showMessageDialog(null, "Thêm hóa đơn thành công!");
                loadDataIntoTable();
            } else {
                JOptionPane.showMessageDialog(null, "Thêm hóa đơn thất bại!");
            }
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi khi thêm hóa đơn.");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    public void loadDataIntoTable() {
        Connection conn = getConnection();
        DefaultTableModel model = (DefaultTableModel) tableQLHoaDon.getModel();  // tableQLHoaDon là JTable
        model.setRowCount(0);  // Xóa dữ liệu cũ trong bảng (nếu có)

        try {
            String sql = "SELECT MaHD, MaKH, MaNV, NgayLap, TongTien, TrangThai, NgayThanhToan FROM dbo.HoaDon";
            var ps = conn.prepareStatement(sql);
            var rs = ps.executeQuery();

            // Đổ dữ liệu vào JTable
            while (rs.next()) {
                String maHD = rs.getString("MaHD");
                String maKH = rs.getString("MaKH");
                String maNV = rs.getString("MaNV");
                String ngayLap = rs.getString("NgayLap");
                String tongTien = rs.getString("TongTien");
                String trangThai = rs.getString("TrangThai");
                String ngayThanhToan = rs.getString("NgayThanhToan");

                // Thêm dữ liệu vào model của JTable
                model.addRow(new Object[]{maHD, maKH, maNV, ngayLap, tongTien, trangThai, ngayThanhToan});
            }

            rs.close();
            ps.close();
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // Lấy dòng đã chọn trong JTable
        int selectedRow = tableQLHoaDon.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn cần xóa!");
        } else {
            // Lấy giá trị MaNV từ dòng đã chọn (cột MaHD ở vị trí 0)
            String maHD = tableQLHoaDon.getValueAt(selectedRow, 0).toString();

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa hóa đơn có mã: " + maHD + "?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Thực hiện xóa hóa đơn trong cơ sở dữ liệu
                Connection conn = getConnection();
                try {
                    String sql = "DELETE FROM dbo.HoaDon WHERE MaHD = ?";
                    PreparedStatement ps = conn.prepareStatement(sql);
                    ps.setString(1, maHD);  // Gán giá trị MaHD vào câu lệnh SQL

                    int rowsDeleted = ps.executeUpdate();  // Thực thi lệnh xóa
                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(null, "Xóa hóa đơn thành công!");
                        loadDataIntoTable();  // Cập nhật lại JTable sau khi xóa
                    } else {
                        JOptionPane.showMessageDialog(null, "Xóa hóa đơn thất bại!");
                    }

                    ps.close();
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Có lỗi xảy ra khi xóa dữ liệu!");
                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // Lấy dữ liệu đã được sửa từ các JTextField
        String maHD = txtMaHD.getText();
        String maKH = txtMaKH.getText();
        String maNV = txtMaNV.getText();
        String ngayLap = txtNgayLap.getText();
        String tongTien = txtTongTien.getText();
        String trangThai = txtTrangThai.getText();
        String ngayThanhToan = txtNgayThanhToan.getText();
        // Kiểm tra xem dữ liệu đã nhập đầy đủ chưa
        if (maNV.isEmpty() || maHD.isEmpty() || maKH.isEmpty() || maNV.isEmpty() || ngayLap.isEmpty()
                || tongTien.isEmpty() || trangThai.isEmpty() || ngayThanhToan.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin!");
        } else {
            // Cập nhật dữ liệu vào cơ sở dữ liệu
            Connection conn = getConnection();
            try {
                String sql = "UPDATE dbo.HoaDon SET MaKH = ?, MaNV = ?, NgayLap = ?, TongTien = ? WHERE MaHD = ?";
                var ps = conn.prepareStatement(sql);

                // Gán giá trị cho các tham số trong câu lệnh SQL    
                ps.setString(1, maKH);
                ps.setString(2, maNV);
                ps.setString(3, ngayLap);
                ps.setString(4, tongTien);
                ps.setString(5, maHD);  // Điều kiện WHERE: MaNV

                // Thực thi lệnh cập nhật
                int rowsUpdated = ps.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Cập nhật hóa đơn thành công!");
                    loadDataIntoTable();  // Cập nhật lại JTable sau khi lưu
                } else {
                    JOptionPane.showMessageDialog(null, "Cập nhật hóa đơn thất bại!");
                }

                ps.close();
                conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Có lỗi xảy ra khi cập nhật dữ liệu!");
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // Tạo instance của form frmTrangChu và hiển thị nó
        frmTrangChu trangChu = new frmTrangChu();
        trangChu.setVisible(true);

        // Ẩn form hiện tại
        this.dispose();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // Lấy dòng đã chọn trong JTable
        int selectedRow = tableQLHoaDon.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn cần sửa!");
        } else {
            // Lấy giá trị của từng cột từ hàng được chọn trong JTable
            String maHD = tableQLHoaDon.getValueAt(selectedRow, 0).toString();
            String maKH = tableQLHoaDon.getValueAt(selectedRow, 1).toString();
            String maNV = tableQLHoaDon.getValueAt(selectedRow, 2).toString();
            String ngayLap = tableQLHoaDon.getValueAt(selectedRow, 3).toString();
            String tongTien = tableQLHoaDon.getValueAt(selectedRow, 4).toString();

            // Hiển thị dữ liệu lên các JTextField để người dùng có thể chỉnh sửa
            txtMaHD.setText(maHD);
            txtMaKH.setText(maKH);
            txtMaNV.setText(maNV);
            txtNgayLap.setText(ngayLap);
            txtTongTien.setText(tongTien);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyBoActionPerformed

        txtNgayLap.setText("");
        txtMaHD.setText("");
        txtTongTien.setText("");
        txtMaNV.setText("");
        txtMaKH.setText("");
    }//GEN-LAST:event_btnHuyBoActionPerformed

    private void btnHienBangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienBangActionPerformed
        // Gọi phương thức loadDataIntoTable để hiển thị dữ liệu lên JTable
        loadDataIntoTable();
    }//GEN-LAST:event_btnHienBangActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed

        String maHD = txtTimKiem.getText().trim();

        if (maHD.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã hóa đơn cần tìm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            // Sử dụng constructor trống để tránh kiểm tra các giá trị không cần thiết
            QuanLyHoaDon qlhd = new QuanLyHoaDon();
            DefaultTableModel model = qlhd.timKiemHoaDon(maHD);
            tableQLHoaDon.setModel(model); // Cập nhật JTable với kết quả tìm kiếm
        }

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        int selectedRow = tableQLHoaDon.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn cần in!");
            return;
        }

        // Lấy thông tin từ bảng hóa đơn
        String maHD = tableQLHoaDon.getValueAt(selectedRow, 0).toString();
        String tenKH = tableQLHoaDon.getValueAt(selectedRow, 1).toString();
        String ngayLap = tableQLHoaDon.getValueAt(selectedRow, 2).toString();
        String tongTien = tableQLHoaDon.getValueAt(selectedRow, 3).toString();

        // Lấy danh sách chi tiết hóa đơn từ database
        List<String[]> chiTiet = loadChiTietHoaDon(maHD);

        // Hiển thị DialogHoaDon
        DialogHoaDon dialog = new DialogHoaDon(this, true, maHD, tenKH, ngayLap, tongTien, chiTiet);
        dialog.setVisible(true);
    }

// Hàm load danh sách chi tiết hóa đơn từ database
    private List<String[]> loadChiTietHoaDon(String maHD) {
        List<String[]> chiTiet = new ArrayList<>();
        try {
            Connection conn = Databasee.getConnection();
            String sql = "SELECT TenDV, SoLuong, DonGia, SoLuong * DonGia AS ThanhTien FROM dbo.ChiTietHoaDon WHERE MaHD = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, maHD);
            var rs = ps.executeQuery();

            while (rs.next()) {
                String tenDV = rs.getString("TenDV");
                String soLuong = rs.getString("SoLuong");
                String donGia = rs.getString("DonGia");
                String thanhTien = rs.getString("ThanhTien");
                chiTiet.add(new String[]{tenDV, soLuong, donGia, thanhTien});
            }

            rs.close();
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tải chi tiết hóa đơn: " + e.getMessage());
        }
        return chiTiet;
    }//GEN-LAST:event_btnInHoaDonActionPerformed

    private void btnXacNhanHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanHoaDonActionPerformed
        int selectedRow = tableQLHoaDon.getSelectedRow(); // Lấy hàng được chọn trong bảng hóa đơn
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn để xác nhận!");
            return;
        }

        String maHD = tableQLHoaDon.getValueAt(selectedRow, 0).toString(); // Lấy mã hóa đơn
        try {
            Connection conn = Databasee.getConnection();
            String sql = "UPDATE dbo.HoaDon SET TrangThai = 'Đã xác nhận' WHERE MaHD = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, maHD);
            int result = ps.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Hóa đơn đã được xác nhận thành công!");
                loadDataIntoTable(); // Cập nhật lại danh sách hóa đơn
            } else {
                JOptionPane.showMessageDialog(this, "Xác nhận hóa đơn thất bại!");
            }
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btnXacNhanHoaDonActionPerformed

    private void btnThanhToanHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanHoaDonActionPerformed
        int selectedRow = tableQLHoaDon.getSelectedRow(); // Lấy hàng được chọn trong bảng hóa đơn
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn để thanh toán!");
            return;
        }

        String maHD = tableQLHoaDon.getValueAt(selectedRow, 0).toString(); // Lấy mã hóa đơn

        // Tạo ngày ngẫu nhiên
        Date randomDate = RandomDateGenerator.getRandomDate();

        try {
            Connection conn = Databasee.getConnection();
            String sql = "UPDATE dbo.HoaDon SET TrangThai = 'Đã thanh toán', NgayThanhToan = ? WHERE MaHD = ?";
            PreparedStatement ps = conn.prepareStatement(sql);

            // Chuyển Date sang kiểu chuẩn SQL
            java.sql.Date sqlDate = new java.sql.Date(randomDate.getTime());
            ps.setDate(1, sqlDate);
            ps.setString(2, maHD);

            int result = ps.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Hóa đơn đã được thanh toán thành công!");
                loadDataIntoTable(); // Cập nhật lại danh sách hóa đơn
            } else {
                JOptionPane.showMessageDialog(this, "Thanh toán hóa đơn thất bại!");
            }
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btnThanhToanHoaDonActionPerformed

    private void txtTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrangThaiActionPerformed

    private void btnHuyBoThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyBoThanhToanActionPerformed
        int selectedRow = tableQLHoaDon.getSelectedRow(); // Lấy hàng được chọn trong bảng hóa đơn
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn để hủy bỏ!");
            return;
        }

        String maHD = tableQLHoaDon.getValueAt(selectedRow, 0).toString(); // Lấy mã hóa đơn

        try {
            Connection conn = Databasee.getConnection();
            String sql = "UPDATE dbo.HoaDon SET TrangThai = 'Chưa thanh toán', NgayThanhToan = NULL WHERE MaHD = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, maHD);

            int result = ps.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Hủy bỏ thanh toán hóa đơn thành công!");
                loadDataIntoTable(); // Cập nhật lại danh sách hóa đơn
            } else {
                JOptionPane.showMessageDialog(this, "Hủy bỏ thanh toán hóa đơn thất bại!");
            }
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btnHuyBoThanhToanActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmQLHoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHienBang;
    private javax.swing.JButton btnHuyBo;
    private javax.swing.JButton btnHuyBoThanhToan;
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThanhToanHoaDon;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXacNhanHoaDon;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableQLHoaDon;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtNgayLap;
    private javax.swing.JTextField txtNgayThanhToan;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTongTien;
    private javax.swing.JTextField txtTrangThai;
    // End of variables declaration//GEN-END:variables
}
